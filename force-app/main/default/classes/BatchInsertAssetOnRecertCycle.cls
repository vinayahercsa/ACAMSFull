global class BatchInsertAssetOnRecertCycle implements Database.batchable<sObject>{ 
  public class customException extends Exception {}
        
   global Database.querylocator start(Database.BatchableContext info){ 
       Date todayDate = System.Today();
        return Database.getQueryLocator([select Name,Certification_Type__c,Contact__c,Start_Date__c,End_Date__c,Asset_Present__c,Total_ECU__c,Eligible__c from Recert_Cycle__c where End_Date__c =: todayDate ORDER BY CreatedDate DESC]);
      
   }  
     
    global void execute(Database.BatchableContext info, List<Recert_Cycle__c> lstRecerCycle){
        system.debug('Inside Eexecute statment');
        Map<Id, Contact> mapCon = new Map<Id, Contact>();
         set<Id> conId= new set<Id>();
        for(Recert_Cycle__c rec: lstRecerCycle){
          conId.add(rec.Contact__c);
        } 
        system.debug('conId--->'+conId);
        for(Contact c: [select Id ,Member_Expire_Date__c,AccountId from Contact where Id IN: conId]){
       mapCon.put(c.id,c);
          } 
        
        map<String,ccrz__E_Product__c> mapCCProduct = new map<String,ccrz__E_Product__c>();
        set<Id> ccProdcutId = new set<Id>();      
        list<string> lstSku =new list<string>();
        
        for(Recert_Cycle__c r: lstRecerCycle){
            String recertCycleName = String.valueOf(r.Name);
               
               String myString = recertCycleName.right(2);
               system.debug('myString--->'+myString);
              string  productSku = 'RECE'+r.Certification_Type__c+myString;
            lstSku.add(productSku);
            
        }
        
        for(ccrz__E_Product__c ccProduct:[select id,Name,ccrz__SKU__c  from ccrz__E_Product__c where ccrz__SKU__c In:lstSku]){
            system.debug('ccProduct--->'+ccProduct);
         mapCCProduct.put(ccProduct.ccrz__SKU__c,ccProduct);        
        }   
        system.debug('mapCCProduct--->'+mapCCProduct);
        system.debug('mapCCProduct.keset()------>'+mapCCProduct.keySet());
         RecordType assetMasterRecordType = [SELECT Id
                                                FROM RecordType
                                                WHERE Name = 'Master'
                                                AND SobjectType = 'Asset'];
    
        set<Id> recertId =new set<Id>();
        list<Asset> lstAsset = new list<Asset>();    
        
        for(Recert_Cycle__c r: lstRecerCycle){
            system.debug('Inside forEach Loop-->');
            
            if(r.Asset_Present__c == false){
            if(r.End_Date__c == system.today() &&  mapCon.get(r.Contact__c).Member_Expire_Date__c>= r.End_Date__c &&  r.Total_ECU__c >= 2){   
            system.debug('inside if condition logic--->');
                
                String recertCycleName = String.valueOf(r.Name);
               
               String myString = recertCycleName.right(2);
               system.debug('myString--->'+myString);
              string  productSku = 'RECE'+r.Certification_Type__c+myString;
               system.debug('productSku--->'+productSku);
              // r.Asset_Present__c = true;  

                if(r.Certification_Type__c == 'CKYCA' ){
                             Asset a = new Asset(); 
              a.Name = 'CKYCA Certification - Recertification';
                    system.debug('a.Name------>'+a.Name);
              a.RecordTypeId = assetMasterRecordType.Id;
                    system.debug('a.RecordTypeId------>'+a.RecordTypeId);
              a.AccountId = mapCon.get(r.Contact__c).AccountId;
                     system.debug('a.AccountId------>'+a.AccountId);
              a.Assignee__c = r.Contact__c;
                    system.debug('a.Assignee__c------>'+a.Assignee__c);
            //  a.CC_Product__c ='CKYCA Recertification Fee'+' '+r.End_Date__c.year();                
              a.CC_Product__c = mapCCProduct.get(productSku).id;
              system.debug(' mapCCProduct.get(productSku).id2-->'+ mapCCProduct.get(productSku).id);
                    
              a.Payment_Status__c = 'Completed';
              a.Status__c = 'Active';
              a.Paid_Cert__c = True;
              a.InstallDate =system.today();
              lstAsset.add(a);
             }
                if(r.Certification_Type__c == 'CAFCA'){
                    Asset a = new Asset(); 
              a.Name = 'CAFCA Certification - Recertification';
              a.RecordTypeId = assetMasterRecordType.Id;
              a.AccountId = mapCon.get(r.Contact__c).AccountId;
              a.Assignee__c = r.Contact__c;
              a.CC_Product__c = mapCCProduct.get(productSku).id;
              a.Payment_Status__c = 'Completed';
              a.Status__c = 'Active';
              a.Paid_Cert__c = True;
              a.InstallDate =system.today();
              lstAsset.add(a);
             }
                if(r.Certification_Type__c == 'CTMA'){
                Asset a = new Asset();
              a.Name = 'CTMA Certification - Recertification';
              a.RecordTypeId = assetMasterRecordType.Id;
              a.AccountId = mapCon.get(r.Contact__c).AccountId;
              a.Assignee__c = r.Contact__c;
              a.CC_Product__c = mapCCProduct.get(productSku).id;
              a.Payment_Status__c = 'Completed';
              a.Status__c = 'Active';
              a.Paid_Cert__c = True;
              a.InstallDate =system.today();
              lstAsset.add(a);
             }   
                r.Asset_Present__c = true;
        }   
      }
            list<Recert_Cycle__c> lstrec =new list<Recert_Cycle__c>();
            if(r.Asset_Present__c == true){
                string MultiSelectPickList ='Meet Membership;Meet ECU';
                r.Eligible__c = MultiSelectPickList;
                lstrec.add(r);
            }
            database.update(lstrec);
    }    
      database.insert(lstAsset);
         System.debug('*****BatchInsertAssetOnRecertCycle.execute.lstAsset: ' + lstAsset);
        if (lstAsset != NULL && lstAsset.size() > 0){
            Database.SaveResult [] urList = Database.insert(lstAsset, false);
            for (Database.SaveResult ur : urList) {
                if (ur.isSuccess()) {
                    System.debug('*****BatchInsertAssetOnRecertCycle.execute - Successfully Inserted Record: ' + ur.getId());
                }
                else {
                    for(Database.Error err : ur.getErrors()) {
                        System.debug('*****BatchInsertAssetOnRecertCycle.execute - The following error has occurred: ' + err.getStatusCode() + ': ' + err.getMessage());
                        System.debug('*****BatchInsertAssetOnRecertCycle.execute. - SObject fields that affected this error: ' + err.getFields());
                        customException ex = new customException('DML Error: ' + err.getStatusCode() + ': ' + err.getMessage());
                        //Utils.LogException(ex);
                    }
                }
            }
        }  
        
      }
        
    
    global void finish(Database.BatchableContext info){     
   } 
}